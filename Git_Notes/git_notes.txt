#see current git configuration
	git config --global -e
	
#set global user name
	git config --global user.name "Joel Godfrey-Smith"

#set global user email
	git config --global user.email "jgodfrey-smith@pm.me"

#set default editor
	git config --global core.editor "code"

#set default difference comparing tool
	git config --global diff.tool gitkraken

#create a new git project 
#creates a new folder with the projectName in your current directory and initializes git
	git init $projectName

#to initialize git tracking in an already existing project, go into project folder and run:
	git init .

#see current status of git project
	git status

#move untracked files to staging area
	git add $fileName

#to add all untracked files in a folder to staging area
	git add .

#save all staged changes in tracked files to the branch you are currently working on
	git commit -m "EXAMPLE OF A COMMIT MESSAGE"

#show history of commits (check this routinely)
	git log

#list all the files that have been committed 
	git ls-files

#express commit all changed files in a repo
	git commit -am "Commit Message"

#undo a staged commit
	git reset HEAD fileName

#get the last commit (i.e. last good state of file, discarding changes)
	git checkout -- fileName

#command to get an easily readalbe histor of your repo
	git log --oneline --graph --decorate --all

#make a git command aliases with the following syntax
#--global means its at the user level, not the repo level, ex:
	git config --global alias.hist "log --oneline --graph --decorate --all"
	git hist